@model ProgettoHMI.web.Areas.Tournaments.Abstracts.BaseTournamentViewModel

@{
	ViewData["Title"] = "Index";
}

<div class="container-fluid bg-secondary">
    <h1 class="text-center pt-5 pb-4">Guarda tutti i tornei </h1>
	<a v-if="filtersCount > 0" class="ms-md-4 ms-2 mb-4" type="button" style="color: red;" @@click="resetFilters(); performTournamentReq()">Azzera Filtri</a>
	<span v-else class="ms-md-4 ms-2 mb-4" type="button" style="visibility: hidden;">palceholder</span>
    <div class="row">
        <div class="row">
			<div class="col-1"></div>
			<div class="dropdown tournament-md-filter col-3">
				<button class="btn btn-secondary dropdown-toggle bg-primary px-3" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
					Città
					<span class="badge bg-light text-dark mx-1">{{ selectedCities.length > 0 ? selectedCities.length : "" }}</span>
				</button>
				<ul class="dropdown-menu tournament-dropdown-menu" aria-labelledby="dropdownMenuButton1">
					<template v-for="city in cities">
						<li>
							<button class="dropdown-item ps-4 py-2 border-bottom" type="button" @@click="handleCityOnClick(city)">
								<div class="form-check">
									<input class="form-check-input fs-5" type="checkbox" v-model="city.selected" />
									<label class="form-check-label fs-5">{{ city.value }}</label>
								</div>
							</button>
						</li>
					</template>
				</ul>
			</div>

			<div class="col-3 tournament-filter">
				<button class="btn btn-secondary dropdown-toggle bg-primary px-3" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottomCity" aria-controls="offcanvasBottom">
					Città
					<span class="badge bg-light text-dark mx-1">{{ selectedCities.length > 0 ? selectedCities.length : "" }}</span>
				</button>
			</div>
			<div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottomCity" aria-labelledby="offcanvasBottomLabelCity">
				<div class="offcanvas-header">
					<h5 class="offcanvas-title" id="offcanvasBottomLabelCity">Seleziona una o più città</h5>
					<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
				</div>

				<ul style="padding-left: 0px; overflow-y: auto;">
					<template v-for="city in cities">
						<li style="list-style-type: none;">
							<button class="btn btn-secondary dropdown-item rounded-0 w-100 text-start border-bottom" type="button" @@click="handleCityOnClick(city)" style="padding-left: 40px;">
								<div class="form-check my-3">
									<input class="form-check-input fs-2" type="checkbox" v-model="city.selected" />
									<label class="form-check-label fs-2">{{ city.value }}</label>
								</div>
							</button>
						</li>
					</template>
				</ul>
			</div>

			<div class="col-1"></div>
			<div class="dropdown tournament-md-filter col-3">
				<button class="btn btn-secondary dropdown-toggle bg-primary px-3" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
					Rank
					<span class="badge bg-light text-dark mx-1">{{ selectedRanks.length > 0 ? selectedRanks.length : "" }}</span>
				</button>
				<ul class="dropdown-menu tournament-dropdown-menu" aria-labelledby="dropdownMenuButton1">
					<template v-for="rank in ranks">
						<li>
							<button class="dropdown-item ps-4 py-2 border-bottom" type="button" @@click="handleRankOnClick(rank)">
								<div class="form-check">
									<input class="form-check-input" type="checkbox" v-model="rank.selected" />
									<label class="form-check-label">{{ rank.value }}</label>
								</div>
							</button>
						</li>
					</template>
				</ul>
			</div>
			
			<div class="col-3 tournament-filter">
				<button class="btn btn-secondary dropdown-toggle bg-primary px-3" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottomRank" aria-controls="offcanvasBottom">
					Rank
					<span class="badge bg-light text-dark mx-1">{{ selectedRanks.length > 0 ? selectedRanks.length : "" }}</span>
				</button>
			</div>
			<div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottomRank" aria-labelledby="offcanvasBottomLabelRank">
				<div class="offcanvas-header">
					<h5 class="offcanvas-title" id="offcanvasBottomLabelRank">Seleziona uno o più rank</h5>
					<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
				</div>
				<div class="offcanvas-body small">
					<ul style="padding-left: 0px; overflow-y: auto;">
						<template v-for="rank in ranks">
							<li style="list-style-type: none;">
								<button class="btn btn-secondary dropdown-item rounded-0 w-100 text-start border-bottom" type="button" @@click="handleRankOnClick(rank)" style="padding-left: 40px;">
									<div class="form-check my-3">
										<input class="form-check-input fs-2" type="checkbox" v-model="rank.selected" />
										<label class="form-check-label fs-2">{{ rank.value }}</label>
									</div>
								</button>
							</li>
						</template>
					</ul>
				</div>
			</div>

			<div class="col-1"></div>
			<div class="dropdown col-3" style="display: inline;">
				<button class="btn btn-secondary dropdown-toggle bg-primary px-3" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
					Data
					<span class="badge bg-light text-dark mx-1">{{ startDate != null ? 1 : "" }}</span>
				</button>
				<div class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
					<form class="m-3">
						<label for="start">Seleziona la data di inizio</label>
						<input type="date" id="start" name="start" v-model="startDate" @@change="handleStartDateChange()">
					</form>
				</div>
			</div>
		</div>
    </div>
	<div class="pt-5"></div>

	<div class="row">
		<template v-for="data in showTournamentLst" >
			<div class="col-12 col-md-6 col-lg-4 mb-4">
				<div class="container-fluid bg-white py-4 rounded-4">
					<div class="row">
						<div class="col-1"></div>
						<div class="col-8">
							<div class="pb-2"></div>
							<a href="@Url.Action(MVC.Tournaments.Draw.Draw())" class="h4">{{ data.name }}</a>
						</div>
						<div class="col-3">
							<img :src="'/images/' + data.imgRank" alt="icona rank">
						</div>
					</div>
				</div>
			</div>
		</template>
	</div>
</div>

@section scripts {
	<script src="~/js/bundle-vue.js" asp-append-version="true"></script>
	<script src="~/Areas/Tournaments/Tournaments/Index.js" asp-append-version="true"></script>

	<script type="application/json" id="Seed_JSON">
		@Html.Raw(Model.ToJson())
	</script>
	
	<script type="text/javascript">
		var viewModel = new Tournaments.Tournaments.indexViewModel(JSON.parse(document.getElementById("Seed_JSON").innerText))

		var vueModel = new Vue({
			el: '#pageId',
			data: viewModel
		});
	</script>
}