@model ProgettoHMI.web.Features.Register.RegisterViewModel
@{
    ViewData["Title"] = "Registrati";
    ViewData["ShowHeader"] = false;
}

<div class="bg-primary min-vh-100">
    <nav class="navbar navbar-light">
        <div class="container-fluid">
            <a class="logo-home" href="@Url.Action(MVC.Home.Index())"><img class="logo-home" src="~/images/Home.svg" /></a>
            <h1>LOGO</h1>
            <a href="@Url.Action(MVC.Login.Login())" class="btn btn-primary">Accedi</a>
        </div>
    </nav>

    <p class="p-register text-dark fw-bold fs-4 text-center mt-5 mb-2 disabled">Iscriviti per affrontare nuove sfide<br /> e ottenere numerosi premi</p>

    <div class="container-fluid"> <!-- centrare -->
        <div class="bg-change p-4 rounded mt-5">

            <form method="post" enctype="multipart/form-data">
                <!-- Prima sezione -->
                <div class="step">
                    <label asp-for=Name class="form-label"></label>
                    <input asp-for="Name" class="form-control" type="text" required/>
                    <span asp-validation-for="Name" class="text-danger"></span>

                    <label asp-for=Surname class="form-label"></label>
                    <input asp-for="Surname" class="form-control" type="text" required />
                    <span asp-validation-for="Surname" class="text-danger"></span>

                    <label asp-for=Email class="form-label"></label>
                    <input asp-for="Email" class="form-control" type="text" required />
                    <span asp-validation-for="Email" class="text-danger"></span>

                    <label asp-for=Password class="form-label"></label>
                    <input asp-for="Password" class="form-control" type="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <!-- Seconda sezione -->
                <div class="step d-none">
                    <label for="telefono" class="form-label">Telefono*</label>
                    <input type="tel" id="telefono" name="Telefono" class="form-control mb-3"  required>

                    <label for="codiceFiscale" class="form-label">Codice Fiscale (facoltativo)</label>
                    <input type="text" id="codiceFiscale" name="CodiceFiscale" class="form-control mb-3" required>

                    <label for="indirizzo" class="form-label">Indirizzo (facoltativo)</label>
                    <input type="text" id="indirizzo" name="Indirizzo" class="form-control mb-3" required>

                    <label for="nazionalita" class="form-label">Nazionalità (facoltativo)</label>
                    <input type="text" id="nazionalita" name="Nazionalita" class="form-control mb-3" required>

                    <label for="imgProfilo" class="form-label">Immagine Profilo (facoltativo)</label>
                    <input type="file" id="imgProfilo" name="ImgProfilo" class="form-control mb-3" accept="image/*" required>
                </div>

                <!-- Terza sezione -->
                <div class="step d-none">
                    <h2 class="text-center mb-3">Scegli il tuo livello</h2>
                    <div>
                        <div class="bg-secondary row align-items-center mb-2 p-3 rounded-4">
                            <div class="col-auto">
                                <img src="~/images/diamond.svg" alt="Diamante">
                            </div>
                            <div class="col">
                                <h5>Diamante</h5>
                                <p class="fs-p-register">Giocatore esperto, capace di sferrare vincenti in ogni zona del campo.</p>
                            </div>
                            <div class="col-auto form-check">
                                <input class="form-check-input" type="radio" name="level" value="diamante">
                            </div>
                        </div>

                        <div class="bg-secondary row align-items-center mb-2 p-3 rounded-4">
                            <div class="col-auto">
                                <img src="~/images/gold.svg" alt="Oro">
                            </div>
                            <div class="col">
                                <h5>Oro</h5>
                                <p class="fs-p-register">Giocatore che riesce a controllare i propri colpi, con un buon servizio.</p>
                            </div>
                            <div class="col-auto form-check">
                                <input class="form-check-input" type="radio" name="level" value="oro">
                            </div>
                        </div>

                        <div class="bg-secondary row align-items-center mb-2 p-2 rounded-4">
                            <div class="col-auto">
                                <img src="~/images/silver.svg" alt="Argento">
                            </div>
                            <div class="col">
                                <h5>Argento</h5>
                                <p class="fs-p-register">Giocatore che è capace di sferrare bei solidi colpi, ma fatica a trovare continuità.</p>
                            </div>
                            <div class="col-auto form-check">
                                <input class="form-check-input" type="radio" name="level" value="argento">
                            </div>
                        </div>

                        <div class="bg-secondary row align-items-center mb-2 p-3 rounded-4">
                            <div class="col-auto">
                                <img src="~/images/bronze.svg" alt="Bronzo">
                            </div>
                            <div class="col">
                                <h5>Bronzo</h5>
                                <p class="fs-p-register">Giocatore che ha appena superato le prime avversità.</p>
                            </div>
                            <div class="col-auto form-check">
                                <input class="form-check-input" type="radio" name="level" value="bronzo">
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="d-flex justify-content-between align-items-center mt-3">
                <p id="progress" class="mb-0">1 di 3</p>
                <div>
                    <button type="button" id="prevBtn" class="btn btn-secondary me-2" onclick="changeStep(-1)" disabled>Indietro</button>
                    <button type="button" id="nextBtn" class="btn btn-primary" onclick="changeStep(1)">Avanti</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        let currentStep = 0;
        const steps = document.querySelectorAll(".step");
        const progress = document.getElementById("progress");
        const prevBtn = document.getElementById("prevBtn");
        const nextBtn = document.getElementById("nextBtn");
        const bg =  document.querySelector('.bg-change');
        const pRegister =  document.querySelector('.p-register');

        bg.style.backgroundColor = '#E1E1E1';

        function updateForm() {
            steps.forEach((step, index) => {
                step.classList.toggle("d-none", index !== currentStep);
            });
            progress.innerText = `Passo ${currentStep + 1} di ${steps.length}`;
            prevBtn.disabled = currentStep === 0;
            nextBtn.innerText = currentStep === steps.length - 1 ? "Invia" : "Avanti";
            bg.style.backgroundColor = currentStep === steps.length - 1 ? '#729D9D' : '#E1E1E1';
            pRegister.style.display = currentStep === 0 ? 'block' : 'none';
        }

        function changeStep(stepChange) {
            currentStep += stepChange;
            if (currentStep >= steps.length) {
                document.querySelector("form").submit();
                return;
            }
            updateForm();
        }

        document.querySelectorAll('input[name="level"]').forEach((radio) => {
            radio.addEventListener('change', function() {
                document.querySelectorAll('.bg-secondary').forEach((div) => {
                    div.classList.remove('selected');
                });
                this.closest('.bg-secondary').classList.add('selected');
            });
        });

    </script>

    <style>
        .fs-p-register {
			font-size: 13px;
        }

        .selected {
            background-color: #918F8F !important;
        }
    </style>




</div>